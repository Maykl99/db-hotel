    Query:

    1. Seleziona tutti gli ospiti che sono stati identificati con la carta di identità.

    SELECT *                         
    FROM `ospiti` 
    WHERE `document_type`= 'CI';

    SELECT * 
    FROM `ospiti`   
    WHERE `document_type` LIKE 'CI';

    SELECT *                                        //-> Operatore di disuguaglianza in questo caso può funzionare dato che esistono solo due tipi di valori;
    FROM `ospiti` 
    WHERE `document_type` <> 'Driver License';


    2. Seleziona tutti gli ospiti che sono nati dopo il 1988

    SELECT * 
    FROM `ospiti` 
    WHERE `date_of_birth`>'1988';

    SELECT * 
    FROM `ospiti` 
    WHERE 
    DATE(`date_of_birth`) > '1988';

    SELECT * 
    FROM `ospiti` 
    WHERE 
    YEAR(`date_of_birth`) > '1988';


    3. Seleziona tutti gli ospiti che hanno più di 20 anni

    SELECT * 
    FROM `ospiti`
    WHERE `date_of_birth` < '2000';              //-> calcolo approssimativo;

    SELECT * 
    FROM `ospiti` 
    WHERE 
    TIMESTAMPDIFF ( YEAR , `date_of_birth` , CURDATE()) > '20';

    SELECT `date_of_birth` 
    FROM `ospiti` 
    WHERE 
    TIMESTAMPDIFF ( YEAR , `date_of_birth` , CURDATE()) > '20';

    SELECT *
    FROM `ospiti`
    WHERE `date_of_birth` <= DATE_SUB(CURDATE(),INTERVAL 21 YEAR);  //-> precisione massima;



    4. Seleziona tutti gli ospiti il cui nome inizia con la D

    SELECT * 
    FROM `ospiti` 
    WHERE `name` 
    LIKE 'd%'


    5.Calcolare il totale degli ospiti paganti

    SELECT COUNT(*)     // oppure id;
    AS 'pagamenti_totali'
    FROM `paganti`
    WHERE `ospite_id` IS NOT NULL;

    SELECT COUNT(ospite_id)     // oppure id;
    AS 'pagamenti_totali'
    FROM `paganti`;

    6.Qual è il prezzo massimo pagato?

    SELECT MAX(`price`) 
    FROM `pagamenti`;
    
    SELECT MAX(`price`) 
    AS 'max_price'
    FROM `pagamenti` 
    WHERE `status` = 'accepted';


    7.Seleziona gli ospiti riconosciuti con patente e nati nel 1975

    SELECT * 
    FROM `ospiti` 
    WHERE `document_type` = 'Driver License' 
    AND YEAR(`date_of_birth`) = '1975';
    
    8. Quanti posti letto ha l’hotel in totale?

    SELECT SUM(`beds`) FROM `stanze`;


     ========== SECONDA PARTE REPO  =================================================
    

    1. Conta gli ospiti raggruppandoli per anno di nascita

    SELECT COUNT(`id`), YEAR(`date_of_birth` )
    FROM ospiti 
    GROUP BY `date_of_birth`;

    SELECT CONCAT(COUNT(`id`), ' ',`date_of_birth`) 
    AS 'Ospiti per anno di nascita' 
    FROM ospiti
    GROUP BY `date_of_birth`;

    SELECT COUNT(`id`) 
    AS 'ospiti', `date_of_birth` 
    AS 'Data_di_nascita' 
    FROM ospiti 
    GROUP BY `date_of_birth`;

    SELECT CONCAT(ospiti.id,' ',ospiti.name,' ',ospiti.lastname,' ', ospiti.date_of_birth) 
    AS 'Info clienti' 
    FROM ospiti 
    ORDER BY `date_of_birth`;

    2. Somma i prezzi dei pagamenti raggruppandoli per status

    SELECT 
    SUM(`price`) , `status` 
    FROM `pagamenti` 
    GROUP BY `status`;

    SELECT 
    SUM(pagamenti.price) 
    AS 'Somma_pagamenti', pagamenti.status 
    AS 'stato_del_pagamento' 
    FROM `pagamenti` 
    GROUP BY `status`;

    3. Conta quante volte è stata prenotata ogni stanza

    SELECT 
    COUNT(`stanza_id`) 
    FROM `prenotazioni` 
    GROUP BY `stanza_id`;

    4.  Stampare tutti gli ospiti per ogni prenotazione

    SELECT prenotazioni.id, ospiti.name, ospiti.lastname  
    FROM prenotazioni 
    INNER JOIN `prenotazioni_has_ospiti` 
    ON prenotazioni_has_ospiti.prenotazione_id = prenotazioni.id 
    INNER JOIN `ospiti` 
    ON ospiti.id = prenotazioni_has_ospiti.ospite_id 
    ORDER BY prenotazioni.id;

    SELECT ospiti.name,ospiti.lastname,prenotazioni.id 
    FROM `prenotazioni` 
    JOIN prenotazioni_has_ospiti 
    ON prenotazioni.id=prenotazioni_has_ospiti.prenotazione_id 
    JOIN ospiti 
    ON prenotazioni_has_ospiti.ospite_id=ospiti.id 
    GROUP BY prenotazioni.id,ospiti.name,ospiti.lastname


    5. Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

    SELECT CONCAT(paganti.name,' ',paganti.lastname,' ',pagamenti.price) 
    AS 'Dati_pagante_mese_di_maggio_2018' 
    FROM `paganti`
    INNER JOIN `pagamenti`
    ON paganti.id = pagamenti.pagante_id 
    WHERE MONTH(paganti.created_at) = '05' 
    AND YEAR(paganti.created_at) = '2018';

    SELECT ospiti.name, ospiti.lastname, pagamenti.price, paganti.name as 'Nome_Pagante', prenotazioni.created_at as 'Data Prenotazione'
    FROM ospiti
    INNER JOIN paganti on ospiti.id = paganti.ospite_id
    INNER JOIN pagamenti on pagamenti.pagante_id = paganti.id
    INNER JOIN prenotazioni on prenotazioni.id = pagamenti.prenotazione_id
    WHERE YEAR(prenotazioni.created_at) = '2018' and MONTH(prenotazioni.created_at) = '05';


    6. Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

    SELECT SUM(`price`) , stanze.floor  AS 'Piano'
    FROM `pagamenti`
    INNER JOIN `prenotazioni` 
    ON prenotazioni.id = pagamenti.prenotazione_id
    INNER JOIN `stanze`
    ON stanze.id = prenotazioni.stanza_id WHERE stanze.floor = '1';

    SELECT SUM(pagamenti.price),stanze.floor
    FROM `pagamenti` 
    JOIN `prenotazioni`
    ON pagamenti.prenotazione_id = prenotazioni.id 
    JOIN `stanze`
    ON prenotazioni.stanza_id= stanze.id WHERE stanze.floor = 1;

    7. Prendi i dati di fatturazione per la prenotazione con id=7

    SELECT * 
    FROM `pagamenti` 
    INNER JOIN `paganti`
    ON paganti.id = pagamenti.pagante_id
    INNER JOIN `prenotazioni`
    ON prenotazioni.id = pagamenti.prenotazione_id
    WHERE prenotazioni.id = '7';


    SELECT CONCAT(pagamenti.id, ' ',pagamenti.status,' ',pagamenti.price,'$',' ',pagamenti.prenotazione_id,' ',pagamenti.created_at) 
    AS 'dati_generali', 
    CONCAT(paganti.name,' ',paganti.lastname,' ',paganti.address) 
    AS 'dati_personali', 
    CONCAT(prenotazioni.stanza_id,' ',prenotazioni.configurazione_id) 
    AS 'id_stanza_id_configurazione'
    FROM `pagamenti` 
    INNER JOIN `paganti`
    ON paganti.id = pagamenti.pagante_id
    INNER JOIN `prenotazioni`
    ON prenotazioni.id = pagamenti.prenotazione_id
    WHERE prenotazioni.id = '7';



    
    1. Fai un'analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti.

        SELECT HOUR(prenotazioni.created_at) 
        FROM `prenotazioni` WHERE prenotazioni

    2. Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)

        SELECT prenotazioni.stanza_id, stanze.id
        FROM `prenotazioni` 
        RIGHT JOIN `stanze`
        ON prenotazioni.stanza_id = stanze.id 
        WHERE prenotazioni.stanza_id IS NULL;

    3. Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

        SELECT prenotazioni_has_ospiti.ospite_id, ospiti.name, ospiti.lastname 
        FROM `prenotazioni_has_ospiti` 
        INNER JOIN `ospiti`
        ON prenotazioni_has_ospiti.ospite_id = ospiti.id 
        GROUP BY prenotazioni_has_ospiti.ospite_id 
        HAVING COUNT(prenotazioni_has_ospiti.ospite_id) > 2;